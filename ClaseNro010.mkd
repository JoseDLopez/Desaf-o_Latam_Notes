#Desafío Latam

##Clase Nro 10
*23-Aug-16*

##RESPONSIVE DESIGN
Es crear una pagina que se adapte en funcion de la resolucion de la pantalla.

Una metodologia es **MOBILE FIRST**, esto quiere decir que el clasico concepto que es empezar desde la version desktop que se empieza a degradar hasta llegar a la version movil, es cambiado desde el diseño movil hasta el diseño desktop.

Para hacer responsive design existen varias tecnicas como el media queries.


##MEDIA QUERIES

Consisten en utilizar el atributo media de CSS para establecer reglas dependiendo de las caracteristicas del medio en el cual se esta cargando la pagina.

El media es como un condicional que se ejecuta cuando se cumpla cierto criterio. En este caso sería el ancho de la pantalla

Se coloca en el archivo CSS. Se pueden hacer varios medias. Cada uno de los medias son conocidos como **breakpoint**.

En el CSS se usan de la siguiente manera:

    @media (max-width: 1000px){
        body {
            background-color: red;
        }    
    }
    
    
    @media (max-width: 600px){
        body {
            background-color: yellow;
        }    
    }

Es posible utilizar operadores logicos, como **AND, NOT, ONLY, OR**.

###Tipos de MEDIA:

- all: Incluye a todos los tipos de media.
- braille: Se usan para dispositivos de retroalimentacion táctil braile.
- embossed
- handheld
- print: Se utiliza para paginar el material y para los documentos vistos en la pantalla en el modo de vista previa de impresion.
- projection
- screen
- speech
- tty
- tv


Podemos instalar resizer para manipular las paginas y ver como se comportan de manera responsive.

Con la meta viewport podemos definir el ancho de nuestra pagina web al mismo ancho del dispositivo, y podemos manipular el zoom de la pagina. y nos podemos asegurar que nadie aplique zoom a la pagina.

###LA GRILLA
Es el concepto más importante detrás del diseño web. La grilla no es mas que columnas virtuales, de las cuales nos apoyamos para poner nuestro contenido.

Consiste en un conjunto de declaraciones de ancho de columnas. Que van ocupando el ancho del viewport. Si se crea manualmente, el codigo funcionaria asi:

    [class*="col-"] {float:left;}
    	.col-1{width:8.33%;}
    	.col-2{width:16.66%;}
    	.col-3{width:25%;}
    	.col-4{width:33.33%;}
    	.col-5{width:41.66%;}
    	.col-6{width:50%;}
    	.col-7{width:58.33%;}
    	.col-8{width:66.66%;}
    	.col-9{width:75%;}
    	.col-10{width:83.33%;}
        .col-11{width:91.66%;}
        .col-12{width:100%;}


Para limpiarlos debemos agregar la columna row y agregar lo siguiente en CSS:

    .clearfix:before,
    .clearfix:after,
    .container:before,
    .container:after,
    .container-fluid:before,
    .container-fluid:after,
    .row:before,
    .row:after {
      display: table;
      content: " ";
    }
    .clearfix:after,
    .container:after,
    .container-fluid:after,
    .row:after,
     {
      clear: both;
    }

Tambien se agregan columnas de offset para agregar un espacio a la izquierda y poder posicionar los elementos:

    	.col-offset-1{width:8.33%;}
    	.col-offset-2{width:16.66%;}
    	.col-offset-3{width:25%;}
    	.col-offset-4{width:33.33%;}
    	.col-offset-5{width:41.66%;}
    	.col-offset-6{width:50%;}
    	.col-offset-7{width:58.33%;}
    	.col-offset-8{width:66.66%;}
    	.col-offset-9{width:75%;}
    	.col-offset-10{width:83.33%;}
        .col-offset-11{width:91.66%;}
        .col-offset-12{width:100%;}




La estructura basica es de contenedor a fila y de ahi a columna, indicando cuanto espacio es el necesario.


BOOTSTRAP:

Es un framework, como foundation, skeletor.

Tiene tres formas de integrarse. Descargando un comrpimdo.






